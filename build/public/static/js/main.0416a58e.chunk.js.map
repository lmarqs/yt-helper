{"version":3,"sources":["video.ts","Form.tsx","Navbar.tsx","List.tsx","App.tsx","index.tsx"],"names":["fetchVideo","video","a","fetch","encodeURIComponent","response","json","useVideos","React","useState","persisted","localStorage","getItem","JSON","parse","initialState","videos","setVideos","useEffect","setItem","stringify","Form","state","isSubmitting","handleSubmit","props","onSubmit","setState","alert","message","this","Component","InnerForm","useForm","register","autoComplete","className","aria-label","name","placeholder","readOnly","ref","required","type","disabled","Navbar","children","List","map","key","video_id","ListItem","title","Actions","isFocused","setIsFocused","onBlur","useCallback","e","setTimeout","onFocus","aria-expanded","aria-haspopup","data-toggle","href","video_url","rel","target","App","callback","dependencies","useOnSubmitCallback","values","url","filter","v","Strict","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0416a58e.chunk.js","sourcesContent":["import ytdl from \"ytdl-core\";\nimport React from \"react\";\n\nexport type Video = ytdl.videoInfo;\n\nexport async function fetchVideo(video: string): Promise<Video> {\n  const response = await fetch(`/api/video/${encodeURIComponent(video)}/info`);\n  return response.json();\n}\n\nexport function useVideos(): [Video[], React.Dispatch<React.SetStateAction<Video[]>>] {\n  const [videos, setVideos] = React.useState(initialState());\n\n  React.useEffect(() => void localStorage.setItem('videos', JSON.stringify(videos)), [videos]);\n\n  return [videos, setVideos];\n}\n\nfunction initialState(): Video[] {\n  const persisted = localStorage.getItem('videos') ?? '[]';\n  return JSON.parse(persisted);\n}\n","import React, { useCallback, DependencyList, Component, FunctionComponent } from \"react\";\nimport { useForm } from 'react-hook-form';\n\ninterface FieldValues {\n  url: string;\n}\n\ntype OnSubmit = (values: FieldValues) => void;\n\ninterface Props {\n  onSubmit?: OnSubmit;\n}\n\ninterface State {\n  isSubmitting: boolean;\n}\n\nexport class Form extends Component<Props, State> {\n  public state: State = {\n    isSubmitting: false,\n  }\n\n  private handleSubmit: OnSubmit = async (...args) => {\n    const { onSubmit = () => undefined } = this.props;\n\n    this.setState({ isSubmitting: true });\n\n    try {\n      await onSubmit(...args);\n    } catch (e) {\n      alert(e?.message ?? \"Erro\");\n    } finally {\n      this.setState({ isSubmitting: false });\n    }\n  }\n\n  public render() {\n    const { isSubmitting } = this.state;\n    return <InnerForm isSubmitting={isSubmitting} onSubmit={this.handleSubmit} />\n  }\n}\n\n\ninterface InnerFormProps {\n  onSubmit: OnSubmit,\n  isSubmitting: boolean,\n}\n\nconst InnerForm: FunctionComponent<InnerFormProps> = ({ onSubmit, isSubmitting }) => {\n  const { register, handleSubmit } = useForm<FieldValues>();\n\n  return (\n    <form\n      autoComplete=\"off\"\n      className=\"form-inline my-2 my-lg-0\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <input\n        aria-label=\"Video URL\"\n        className=\"col-12 col-md-8 form-control mr-md-2\"\n        name=\"url\"\n        placeholder=\"Video URL\"\n        readOnly={isSubmitting}\n        ref={register}\n        required\n        type=\"url\"\n      />\n      <button\n        className=\"btn btn-outline-success my-2\"\n        disabled={isSubmitting}\n        type=\"submit\"\n      >\n        Adicionar\n      </button>\n    </form>\n  )\n}\n\nexport function useOnSubmitCallback(callback: OnSubmit, dependencies: DependencyList = []): OnSubmit {\n  return useCallback<OnSubmit>(callback, dependencies);\n}\n","import React, { FunctionComponent, PropsWithChildren } from \"react\";\n\ninterface Props {\n}\n\nexport const Navbar: FunctionComponent<PropsWithChildren<Props>> = ({ children }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light px-0\">\n      <div className=\"col-12 col-md-4\">\n        <i className=\"navbar-brand mb-0 h1\">\n          YT Helper\n        </i>\n      </div>\n      <div className=\"col\">\n        {children}\n      </div>\n    </nav>\n  );\n}\n","import React, { FunctionComponent, useState, useCallback } from \"react\";\nimport { Video } from \"./video\";\n\ninterface Props {\n  videos: Video[];\n}\n\nexport const List: FunctionComponent<Props> = ({ videos }) => {\n  return (\n    <ul className=\"list-group\">\n      {videos.map(video => (\n        <ListItem key={video.video_id} video={video} />\n      ))}\n    </ul>\n  );\n}\n\nconst ListItem: FunctionComponent<{ video: Video }> = ({ video }) => {\n  return (\n    <li className=\"list-group-item\">\n      <div className=\"row\">\n        <div className=\"col-10\">\n          {video.title}\n        </div>\n        <div className=\"col-2\">\n          <Actions video={video} />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nconst Actions: FunctionComponent<{ video: Video }> = ({ video }) => {\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n\n  const onBlur = useCallback((e) => {\n    setTimeout(() => setIsFocused(false), 500);\n  }, []);\n\n\n  const onFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  return (\n    <div className=\"dropdown dropleft\" onBlur={onBlur} onFocus={onFocus}>\n      <button\n        aria-expanded={isFocused}\n        aria-haspopup=\"true\"\n        className={`btn btn-link${isFocused ? ' show' : ''}`}\n        data-toggle=\"dropdown\"\n        type=\"button\"\n      >\n        <span className=\"material-icons\">\n          more_horiz\n        </span>\n      </button>\n      <div className={`dropdown-menu${isFocused ? ' show' : ''}`}>\n        <a className=\"dropdown-item\" href={video.video_url} rel=\"noopener noreferrer\" target=\"_blank\">\n          Assistir\n        </a>\n        <a className=\"dropdown-item\" href={`/api/video/${encodeURIComponent(video.video_url)}/download?name=${encodeURIComponent(video.title)}`} rel=\"noopener noreferrer\" target=\"_blank\">\n          Baixar\n        </a>\n      </div>\n    </div>\n  )\n}\n","\nimport React from \"react\";\nimport { useVideos, fetchVideo } from \"./video\";\nimport { Form, useOnSubmitCallback } from \"./Form\";\nimport { Navbar } from \"./Navbar\";\nimport { List } from \"./List\";\n\nexport const App: React.FunctionComponent = () => {\n  const [videos, setVideos] = useVideos();\n\n  const onSubmit = useOnSubmitCallback(async (values) => {\n    const video = await fetchVideo(values.url);\n\n    setVideos([video, ...videos.filter(v => v.video_id !== video.video_id)]);\n  });\n\n  return (\n    <div className=\"container px-0\">\n      <Navbar>\n        <Form onSubmit={onSubmit} />\n      </Navbar>\n      <List videos={videos} />\n    </div>\n  )\n}\n","import React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\n\nconst Strict = () => (\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n\nReactDOM.render(<Strict />, document.getElementById('app'));\n"],"sourceRoot":""}