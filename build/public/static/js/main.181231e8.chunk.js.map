{"version":3,"sources":["video.ts","Form.tsx","Navbar.tsx","List.tsx","App.tsx","index.tsx"],"names":["fetchVideo","id","a","fetch","response","json","useVideos","React","useState","persisted","localStorage","getItem","JSON","parse","initialState","videos","setVideos","useEffect","setItem","stringify","Form","state","isSubmitting","handleSubmit","props","onSubmit","setState","alert","Object","prototype","toString","call","this","Component","InnerForm","useForm","register","autoComplete","className","aria-label","name","placeholder","readOnly","ref","required","type","disabled","Navbar","children","List","map","video","key","video_id","ListItem","title","Actions","isFocused","setIsFocused","onBlur","useCallback","e","setTimeout","onFocus","aria-expanded","aria-haspopup","data-toggle","href","video_url","rel","target","encodeURIComponent","App","callback","dependencies","useOnSubmitCallback","values","url","URL","searchParams","get","filter","v","Strict","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.181231e8.chunk.js","sourcesContent":["import ytdl from \"ytdl-core\";\nimport React from \"react\";\n\nexport type Video = ytdl.videoInfo;\n\nexport async function fetchVideo(id: string): Promise<Video> {\n  const response = await fetch(`/api/video/${id}/info`);\n  return response.json();\n}\n\nexport function useVideos(): [Video[], React.Dispatch<React.SetStateAction<Video[]>>] {\n  const [videos, setVideos] = React.useState(initialState());\n\n  React.useEffect(() => void localStorage.setItem('videos', JSON.stringify(videos)), [videos]);\n\n  return [videos, setVideos];\n}\n\nfunction initialState(): Video[] {\n  const persisted = localStorage.getItem('videos') ?? '[]';\n  return JSON.parse(persisted);\n}\n","import React, { useCallback, DependencyList, Component, FunctionComponent } from \"react\";\nimport { useForm } from 'react-hook-form';\n\ninterface FieldValues {\n  url: string;\n}\n\ntype OnSubmit = (values: FieldValues) => void;\n\ninterface Props {\n  onSubmit?: OnSubmit;\n}\n\ninterface State {\n  isSubmitting: boolean;\n}\n\nexport class Form extends Component<Props, State> {\n  public state: State = {\n    isSubmitting: false,\n  }\n\n  private handleSubmit: OnSubmit = async (...args) => {\n    const { onSubmit = () => undefined } = this.props;\n\n    this.setState({ isSubmitting: true });\n\n    try {\n      await onSubmit(...args);\n    } catch (e) {\n      alert(Object.prototype.toString.call(e));\n    } finally {\n      this.setState({ isSubmitting: false });\n    }\n  }\n\n  public render() {\n    const { isSubmitting } = this.state;\n    return <InnerForm isSubmitting={isSubmitting} onSubmit={this.handleSubmit} />\n  }\n}\n\n\ninterface InnerFormProps {\n  onSubmit: OnSubmit,\n  isSubmitting: boolean,\n}\n\nconst InnerForm: FunctionComponent<InnerFormProps> = ({ onSubmit, isSubmitting }) => {\n  const { register, handleSubmit } = useForm<FieldValues>();\n\n  return (\n    <form \n      autoComplete=\"off\"\n      className=\"form-inline my-2 my-lg-0\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <input \n        aria-label=\"Video\"\n        className=\"col-12 col-md-8 form-control mr-md-2\"\n        name=\"url\"\n        placeholder=\"Video\"\n        readOnly={isSubmitting}\n        ref={register}\n        required\n        type=\"url\"\n      />\n      <button \n        className=\"btn btn-outline-success my-2\"\n        disabled={isSubmitting}\n        type=\"submit\"\n      >\n        Adicionar\n      </button>\n    </form>\n  )\n}\n\nexport function useOnSubmitCallback(callback: OnSubmit, dependencies: DependencyList = []): OnSubmit {\n  return useCallback<OnSubmit>(callback, dependencies);\n}\n","import React, { FunctionComponent, PropsWithChildren } from \"react\";\n\ninterface Props {\n}\n\nexport const Navbar: FunctionComponent<PropsWithChildren<Props>> = ({ children }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light px-0\">\n      <div className=\"col-12 col-md-4\">\n        <i className=\"navbar-brand mb-0 h1\">\n          YT Helper\n        </i>\n      </div>\n      <div className=\"col\">\n        {children}\n      </div>\n    </nav>\n  );\n}\n","import React, { FunctionComponent, useState, useCallback } from \"react\";\nimport { Video } from \"./video\";\n\ninterface Props {\n  videos: Video[];\n}\n\nexport const List: FunctionComponent<Props> = ({ videos }) => {\n  return (\n    <ul className=\"list-group\">\n      {videos.map(video => (\n        <ListItem key={video.video_id} video={video} />\n      ))}\n    </ul>\n  );\n}\n\nconst ListItem: FunctionComponent<{ video: Video }> = ({ video }) => {\n  return (\n    <li className=\"list-group-item\">\n      <div className=\"row\">\n        <div className=\"col-10\">\n          {video.title}\n        </div>\n        <div className=\"col-2\">\n          <Actions video={video} />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nconst Actions: FunctionComponent<{ video: Video }> = ({ video }) => {\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n\n  const onBlur = useCallback((e) => {\n    setTimeout(() => setIsFocused(false), 500);\n  }, []);\n\n\n  const onFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  return (\n    <div onBlur={onBlur} onFocus={onFocus}>\n      <button\n        aria-expanded={isFocused}\n        aria-haspopup=\"true\"\n        className={`btn btn-link${isFocused ? ' show' : ''}`}\n        data-toggle=\"dropdown\"\n        type=\"button\"\n      >\n        <span className=\"material-icons\">\n          more_horiz\n        </span>\n      </button>\n      <div className={`dropdown-menu${isFocused ? ' show' : ''}`}>\n        <a className=\"dropdown-item\" href={video.video_url} rel=\"noopener noreferrer\" target=\"_blank\">\n          Assistir\n        </a>\n        <a className=\"dropdown-item\" href={`/api/video/${video.video_id}/download?name=${encodeURIComponent(video.title)}`} rel=\"noopener noreferrer\" target=\"_blank\">\n          Baixar\n        </a>\n      </div>\n    </div>\n  )\n}\n","\nimport React from \"react\";\nimport { useVideos, fetchVideo } from \"./video\";\nimport { Form, useOnSubmitCallback } from \"./Form\";\nimport { Navbar } from \"./Navbar\";\nimport { List } from \"./List\";\n\nexport const App: React.FunctionComponent = () => {\n  const [videos, setVideos] = useVideos();\n\n  const onSubmit = useOnSubmitCallback(async (values) => {\n    const url = new URL(values.url);\n    const id = url.searchParams.get(\"v\");\n\n    if (!id) {\n      alert('invalid URL');\n      return;\n    }\n\n    const video = await fetchVideo(id);\n\n    setVideos([video, ...videos.filter(v => v.video_id !== video.video_id)]);\n  });\n\n  return (\n    <div className=\"container px-0\">\n      <Navbar>\n        <Form onSubmit={onSubmit} />\n      </Navbar>\n      <List videos={videos} />\n    </div>\n  )\n}\n","import React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\n\nconst Strict = () => (\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n\nReactDOM.render(<Strict />, document.getElementById('app'));\n"],"sourceRoot":""}