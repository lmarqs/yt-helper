{"version":3,"sources":["video.ts","Form.tsx","Navbar.tsx","List.tsx","App.tsx","index.tsx"],"names":["fetchVideo","video","a","fetch","encodeURIComponent","response","json","useVideos","React","useState","persisted","localStorage","getItem","JSON","parse","initialState","videos","setVideos","useEffect","setItem","stringify","Form","state","url","isSubmitting","handleSubmit","e","preventDefault","props","onSubmit","setState","alert","message","handleUrlChange","target","value","this","autoComplete","className","aria-label","name","onChange","placeholder","readOnly","required","type","disabled","Component","Navbar","children","List","map","key","video_id","ListItem","title","Actions","isFocused","setIsFocused","onBlur","useCallback","setTimeout","onFocus","aria-expanded","aria-haspopup","data-toggle","href","video_url","rel","App","callback","dependencies","useOnSubmitCallback","values","filter","v","slice","Strict","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcc0d8c9.chunk.js","sourcesContent":["import ytdl from \"ytdl-core\";\nimport React from \"react\";\n\nexport type Video = ytdl.videoInfo;\n\nexport async function fetchVideo(video: string): Promise<Video> {\n  const response = await fetch(`/api/video/${encodeURIComponent(video)}/info`);\n  return response.json();\n}\n\nexport function useVideos(): [Video[], React.Dispatch<React.SetStateAction<Video[]>>] {\n  const [videos, setVideos] = React.useState(initialState());\n\n  React.useEffect(() => void localStorage.setItem('videos', JSON.stringify(videos)), [videos]);\n\n  return [videos, setVideos];\n}\n\nfunction initialState(): Video[] {\n  const persisted = localStorage.getItem('videos') ?? '[]';\n  return JSON.parse(persisted);\n}\n","import React, { useCallback, DependencyList, Component, ChangeEventHandler, FormEventHandler } from \"react\";\n\ninterface FieldValues {\n  url: string;\n}\n\ntype OnSubmit = (values: FieldValues) => void;\n\ninterface Props {\n  onSubmit?: OnSubmit;\n}\n\ninterface State {\n  url: string,\n  isSubmitting: boolean;\n}\n\nexport class Form extends Component<Props, State> {\n  public state: State = {\n    url: \"\",\n    isSubmitting: false,\n  }\n\n  private handleSubmit: FormEventHandler = async (e) => {\n    e.preventDefault();\n    \n    const { url } = this.state;\n    const { onSubmit = () => undefined } = this.props;\n\n    this.setState({ isSubmitting: true });\n\n    try {\n      await onSubmit({ url });\n      this.setState({ url: \"\" });\n    } catch (e) {\n      alert(e?.message ?? \"Erro\");\n    } finally {\n      this.setState({ isSubmitting: false });\n    }\n  }\n\n  private handleUrlChange: ChangeEventHandler<HTMLInputElement> = async (e) => {\n    this.setState({ url: e.target.value })\n  }\n\n  public render() {\n    const { url, isSubmitting } = this.state;\n\n    return (\n      <form\n        autoComplete=\"off\"\n        className=\"form-inline my-2 my-lg-0\"\n        onSubmit={this.handleSubmit}\n      >\n        <input\n          aria-label=\"Video URL\"\n          className=\"col-12 col-md-8 form-control mr-md-2\"\n          name=\"url\"\n          onChange={this.handleUrlChange}\n          placeholder=\"Video URL\"\n          readOnly={isSubmitting}\n          required\n          type=\"url\"\n          value={url}\n        />\n        <button\n          className=\"btn btn-outline-success my-2\"\n          disabled={isSubmitting}\n          type=\"submit\"\n        >\n          Adicionar\n        </button>\n      </form>\n    )\n  }\n}\n\n\ninterface InnerFormProps {\n  onSubmit: OnSubmit,\n  isSubmitting: boolean,\n}\n\nexport function useOnSubmitCallback(callback: OnSubmit, dependencies: DependencyList = []): OnSubmit {\n  return useCallback<OnSubmit>(callback, dependencies);\n}\n","import React, { FunctionComponent, PropsWithChildren } from \"react\";\n\ninterface Props {\n}\n\nexport const Navbar: FunctionComponent<PropsWithChildren<Props>> = ({ children }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light px-0\">\n      <div className=\"col-12 col-md-4\">\n        <i className=\"navbar-brand mb-0 h1\">\n          YT Helper\n        </i>\n      </div>\n      <div className=\"col\">\n        {children}\n      </div>\n    </nav>\n  );\n}\n","import React, { FunctionComponent, useState, useCallback } from \"react\";\nimport { Video } from \"./video\";\n\ninterface Props {\n  videos: Video[];\n}\n\nexport const List: FunctionComponent<Props> = ({ videos }) => {\n  return (\n    <ul className=\"list-group\">\n      {videos.map(video => (\n        <ListItem key={video.video_id} video={video} />\n      ))}\n    </ul>\n  );\n}\n\nconst ListItem: FunctionComponent<{ video: Video }> = ({ video }) => {\n  return (\n    <li className=\"list-group-item\">\n      <div className=\"row\">\n        <div className=\"col-10\">\n          {video.title}\n        </div>\n        <div className=\"col-2\">\n          <Actions video={video} />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nconst Actions: FunctionComponent<{ video: Video }> = ({ video }) => {\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n\n  const onBlur = useCallback((e) => {\n    setTimeout(() => setIsFocused(false), 500);\n  }, []);\n\n\n  const onFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  return (\n    <div className=\"dropdown dropleft\" onBlur={onBlur} onFocus={onFocus}>\n      <button\n        aria-expanded={isFocused}\n        aria-haspopup=\"true\"\n        className={`btn btn-link${isFocused ? ' show' : ''}`}\n        data-toggle=\"dropdown\"\n        type=\"button\"\n      >\n        <span className=\"material-icons\">\n          more_horiz\n        </span>\n      </button>\n      <div className={`dropdown-menu${isFocused ? ' show' : ''}`}>\n        <a className=\"dropdown-item\" href={video.video_url} rel=\"noopener noreferrer\" target=\"_blank\">\n          Assistir\n        </a>\n        <a \n          className=\"dropdown-item\"\n          href={`/api/video/${encodeURIComponent(video.video_url)}/download?name=${encodeURIComponent(video.title)}&ext=mp4`}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Baixar Video\n        </a>\n        <a \n          className=\"dropdown-item\"\n          href={`/api/video/${encodeURIComponent(video.video_url)}/download?name=${encodeURIComponent(video.title)}&ext=mp3`}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Baixar Audio\n        </a>\n      </div>\n    </div>\n  )\n}\n","\nimport React from \"react\";\nimport { useVideos, fetchVideo } from \"./video\";\nimport { Form, useOnSubmitCallback } from \"./Form\";\nimport { Navbar } from \"./Navbar\";\nimport { List } from \"./List\";\n\nexport const App: React.FunctionComponent = () => {\n  const [videos, setVideos] = useVideos();\n\n  const onSubmit = useOnSubmitCallback(async (values) => {\n    const video = await fetchVideo(values.url);\n\n    setVideos([video, ...videos.filter(v => v.video_id !== video.video_id)].slice(0, 10));\n  });\n\n  return (\n    <div className=\"container px-0\">\n      <Navbar>\n        <Form onSubmit={onSubmit} />\n      </Navbar>\n      <List videos={videos} />\n    </div>\n  )\n}\n","import React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\n\nconst Strict = () => (\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n\nReactDOM.render(<Strict />, document.getElementById('app'));\n"],"sourceRoot":""}